import json
import os

import requests
from dotenv import load_dotenv

from aiogram import Router
from aiogram.filters.command import Command
from aiogram.types import Message, FSInputFile

router = Router()

load_dotenv()

IMAGEAI_TOKEN = os.environ["IMAGEAI_TOKEN"]
URL_IMAGEAI = os.environ["URL_IMAGEAI"]
MODEL_IMAGEAI = os.environ["MODEL_IMAGEAI"]
RESOLUTION_IMAGEAI = os.environ["RESOLUTION_IMAGEAI"]
STYLE_IMAGEAI = os.environ["STYLE_IMAGEAI"]


def text_to_image(text: str, id: int):
    # –≠—Ç–æ –∏ –µ—Å—Ç—å –æ–±—â–µ–Ω–∏–µ —Å API
    # –ó–¥–µ—Å—å –¥–∞–µ–º –µ–º—É –Ω–∞—à —Ç–æ–∫–µ–Ω –≤ header, –º—ã –µ–≥–æ –Ω–µ —Ä–∞–∑–±–∏—Ä–∞–ª–∏, –Ω–æ –æ–Ω –ø–æ—Ö–æ–∂ –Ω–∞ body
    headers = {
        "Authorization": f"Bearer {IMAGEAI_TOKEN}"}

    # –°—Å—ã–ª–∫–∞ API
    url = f"{URL_IMAGEAI}"

    # –ù–∞—à body
    payload = {
        "providers": f"{MODEL_IMAGEAI}",
        "text": f"{text}",
        # –≠—Ç–æ –Ω–∞—à –ø—Ä–æ–º—Ç, —Ç–æ –µ—Å—Ç—å —Ç–µ–∫—Å—Ç, –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É –º—ã –ø–æ–ª—É—á–∏–º –∫–æ—Ç–µ–Ω–∫—É. –ï–≥–æ –º—ã –ø–µ—Ä–µ–¥–∞–µ–º –≤ —Å–∞–º—É —Ñ—É–Ω–∫—Ü–∏—é
        f"{MODEL_IMAGEAI}": f"{STYLE_IMAGEAI}",
        "resolution": f"{RESOLUTION_IMAGEAI}",
    }

    # –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –Ω–∞ –Ω–∞—à –ø–æ—Å—Ç –∑–∞–ø—Ä–æ—Å
    # request.post - —ç—Ç–æ –ø–æ—Å—Ç –∑–∞–ø—Ä–æ—Å –ø–æ –Ω–∞—à–µ–º—É API, –º—ã –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –µ–º—É body(payload) –∏ headers
    response = requests.post(url, json=payload, headers=headers)
    # –ú—ã –ø–æ–ª—É—á–∏–ª–∏ –Ω–∞ —à–∞ –æ—Ç–≤–µ—Ç –≤ json —Ñ–æ—Ä–º–∞—Ç–µ, —Ç–æ –µ—Å—Ç—å –≤ —Ñ–æ—Ä–º–∞—Ç–µ —Å–ª–æ–≤–∞—Ä—è
    result = json.loads(response.text)

    # –≠—Ç–æ –º—ã –ø–æ–ª—É—á–∞–µ–º –Ω—É–∂–Ω—ã–µ–º –Ω–∞–º –¥–∞–Ω–Ω—ã–µ, —Ç–æ –µ—Å—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫—É
    image_url = result[f'{MODEL_IMAGEAI}']['items'][0]['image_resource_url']
    r = requests.get(image_url)

    # –ù–∞—Å–∏–ª—å–Ω–æ —Å–æ–∑–¥–∞—Å—Ç –ø–∞–ø–∫—É images –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å –±–æ—Ç–æ–º, –Ω—É–∂–Ω–æ –¥–ª—è docker
    os.makedirs("images", exist_ok=True)

    # C–æ—Ö—Ä–∞–Ω–∏—Ç –∫–∞—Ä—Ç–∏–Ω–∫—É –≤ –Ω—É–∂–Ω—É—é –ø–∞–ø–∫—É
    with open(f'images/{id}.png', 'wb') as file:
        file.write(r.content)


@router.message(Command("image"))
async def command_image_handler(message: Message):
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ, —á—Ç–æ–±—ã –µ–≥–æ –ø–æ—Ç–æ–º —É–¥–∞–ª–∏—Ç—å
    # –Ø –Ω–µ –∑–Ω–∞—é –∫–∞–∫ —Ç–æ—á–Ω–æ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç,
    # –Ω–æ —Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ –æ–Ω —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç id —Å–æ–æ–±—â–µ–Ω–∏—è –∏ —á–∞—Ç–∞ –≤ —ç—Ç—É –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
    edited = await message.reply('–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è –∫–∞—Ä—Ç–∏–Ω–∫–∞Ô∏èÔ∏èüèû')

    # –ú—ã –ø–∏—à–µ–º –µ–º—É /image {—Ç–µ–∫—Å—Ç},
    # —ç—Ç–∞ —Å—Ç—Ä–æ–∫–∞ —É–±–∏—Ä–∞–µ—Ç image –∏ –æ—Å—Ç–∞–≤–ª—è–µ—Ç —Ç–µ–∫—Å—Ç
    # –ë–æ—Ç –Ω–µ –≤–∏–¥–∏—Ç —ç—Ç–æ—Ç "/", –æ–Ω –Ω—É–∂–µ–Ω –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∫–æ–º–∞–Ω–¥—ã
    text = message.text[6:]

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º  id –¥–ª—è –Ω–µ–π–º–∏–Ω–≥–∞ —Ñ–∞–π–ª–∞
    id = message.chat.id

    # –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é
    text_to_image(text, id)

    try:
        await message.reply_photo(photo=FSInputFile(f"images/{id}.png"))
        # –õ–æ–≤–∏—Ç –≤—Å–µ –æ—à–∏–±–∫–∏
        # –¢–∞–∫ –Ω–µ–ª—å–∑—è, –ª—É—á—à–µ –ª–æ–≤–∏—Ç—å –≤—Å–µ –æ—à–∏–±–∫–∏ –æ—Ç–¥–µ–ª—å–Ω—ã–º–∏ –æ—à–∏–±–∫–∞–º–∏,
        # —á—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–Ω–∏–º–∞–ª —Ç–æ—á–Ω–æ –≤ —á–µ–º –æ—à–∏–±–∫–∞
        # —ã –µ–µ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∫–∞–∫ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é "e"
    except Exception as e:
        await message.reply("–ú–Ω–µ –Ω–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Åü•∫–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ\n"
                            "–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã: \n"
                            "1) –¢–æ–∫–µ–Ω –±–æ–ª–µ–µ –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω\n"
                            "2) –£ —Ç–æ–∫–µ–Ω–∞ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å –¥–µ–Ω—å–≥–∏\n"
                            "3) –ú–æ–∂–µ—Ç –±—ã—Ç—å —Å–µ—Ä–≤–µ—Ä –ø–ª–æ—Ö–æ —Å—Ä–∞–±–æ—Ç–∞–ª")
        print(e)  # –í—ã–≤–æ–¥–∏–º –æ—à–∏–±–∫—É –≤ –∫–æ–Ω—Å–æ–ª—å –¥–ª—è –ø–æ–Ω–∏–º–∞–Ω–∏—è, —á—Ç–æ —Å–ª—É—á–∏–ª–æ—Å—å, —á—Ç–æ–±—ã –∏—Å–ø—Ä–∞–≤–∏—Ç—å
    await edited.delete()
